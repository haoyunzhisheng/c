#include "stdio.h"
#include "game.h"
#include "stdlib.h"

void Init_Board(char board[ROW][COL],int row,int col)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			board[i][j] = ' ';
		}
	}
}

void Display_Board(char board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			printf(" %c ", board[i][j]);
			if (j < col - 1)
			{
				printf("|");
			}
		}
		printf("\n");
		if (i < row-1)
		{
			for (j = 0; j < col; j++)
			{
				printf("---");
				if (j < col - 1)
				{
					printf("|");
				}
			}
			printf("\n");
		}
	}

}


void Gamer_Move(char board[ROW][COL], int row, int col)
{
	int input_r;
	int input_c;
	printf("请输入:");
	while (1)
	{
		scanf("%d %d", &input_r, &input_c);
		if (board[input_r][input_c] == ' ')
		{
			board[input_r][input_c] = '*';
			break;
		}
		else
		{
			printf("请重新输入");
		}
	}
}

void Computer_Move(char board[ROW][COL], int row, int col)
{
	int input_r;
	int input_c;



	while (1)
	{
		input_r = rand() % row;
		input_c = rand() % col;
		if (board[input_r][input_c] == ' ')
		{
			board[input_r][input_c] = '?';
			break;
		}

	}
}

int Is_Full(char board[ROW][COL], int row, int col)
{
	int i = 0;
	int j = 0;
	for (i = 0; i < row; i++)
	{
		for (j = 0; j < col; j++)
		{
			if (board[i][j] == ' ')
			{
				return 0;
			}
		}
	}
	return 1;
}

char Is_Win(char board[ROW][COL], int row, int col)
{
	int i = 0;					//行判断
	for (i = 0; i < row; i++)
	{
		if (board[i][0] == board[i][1] && board[i][1] == board[i][2] && board[i][0] != ' ')
		{
			return board[i][1];
		}
	}

	int j = 0;                  //列判断
	for (j = 0; j < row; j++)
	{
		if (board[0][j] == board[1][j] && board[1][j] == board[2][j] && board[1][j] != ' ')
		{
			return board[1][j];
		}
	}
	//对角线判断
	if (board[0][0] == board[1][1] && board[1][1] == board[2][2] && board[1][1] != ' ')
	{
		return board[1][1];
	}
	if (board[0][2] == board[1][1] && board[1][1] == board[2][0] && board[1][1] != ' ')
	{
		return board[1][1];
	}

	if (Is_Full(board, row, col) == 1)
	{
		return 'Q';
	}

	return 'C';
}
